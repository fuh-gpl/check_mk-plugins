#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# 
# check_mk plugin to monitor storage systems like Fujitsu ETERNUS DX80 S2 supporting FJDARY-E100.MIB
# Copyright (c) 2012 FuH Entwicklungsgesellschaft mbH, Umkirch, Germany. All rights reserved.
# Author: Philipp Hoefflin, 2012, hoefflin+cmk@fuh-e.de
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation in version 2.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 675 Mass Ave, Cambridge MA 02139, USA or see <http://www.gnu.org/licenses/>
#
# example snmpwalk output:
# snmpwalk -c public -v 1 dx80 .1.3.6.1.4.1.211.1.21.1.100.6.0
# FJDARY-E100::fjdaryUnitStatus.0 = INTEGER: ok(3)

fjdarye100_sum_status = { 1: 'unknown', 2: 'unused', 3: 'ok',
                         4: 'warning', 5: 'failed' }

def inventory_fjdarye100_sum(info):
    if len(info[0]) == 1:
        return [ (0, None) ]

def check_fjdarye100_sum(index, _no_param, info):
    for line in info:
        if len(info[0]) == 1:
            status = int(line[0])
            text = "Status is %s" % fjdarye100_sum_status[status]

            if status == 3:
                return (0, "OK - %s" % text)
            elif status == 4:
                return (1, "WARN - %s" % text)
            else:
                return (2, "CRIT - %s" % text)

    return (3, "UNKNOWN - No status summary present" )

check_info['fjdarye100_sum'] = (check_fjdarye100_sum, "Summary Status %s", 0,  inventory_fjdarye100_sum)
# 1: fjdaryUnitStatus
snmp_info['fjdarye100_sum'] = (".1.3.6.1.4.1.211.1.21.1.100.6", [ "0" ])

snmp_scan_functions['fjdarye100_sum'] \
        = lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.211.1.21.1.100"
